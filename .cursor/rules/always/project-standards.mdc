---
description: "Core NeuralForge project standards and Apple Silicon optimization"
alwaysApply: true
---

# NeuralForge Core Standards

## Project Mission
NeuralForge is a Professional AI & Automation Toolkit optimized for Apple Silicon (M3) Macs with enterprise-grade PostgreSQL 17 integration.

## Technology Stack
- **Python 3.9+** - Primary language
- **PostgreSQL 17** - AI memory system
- **Apple Silicon** - M1/M2/M3 optimization
- **Rich** - Beautiful terminal interfaces
- **pytest** - Testing framework
- **GitHub Actions** - CI/CD pipeline

## Apple Silicon Optimization Rules
- ALWAYS prioritize Apple Silicon M3 optimizations first
- Use MLX for mathematical operations when available
- Leverage 16-core Neural Engine (18 TOPS) for AI tasks
- Optimize for 16GB unified memory and 10-core GPU
- Test MLX integration before falling back to numpy
- Hardware paths: /Volumes/MICRO for external storage

## Code Standards
- Use absolute paths on macOS
- Follow PEP 8 style guidelines
- Include type hints for all functions
- Use Google-style docstrings
- Maximum line length: 88 characters
- Use Black for code formatting

## Error Handling
- Include comprehensive error handling
- Use Rich for beautiful error messages
- Log all operations with appropriate levels
- Provide clear error messages and recovery suggestions
- Never over-complicate: maintain stability first

## Testing Requirements
- Write tests for all new functionality
- Aim for >80% code coverage
- Use descriptive test names
- Include both unit and integration tests
- Test Apple Silicon specific features

## Documentation Standards
- Update README.md for user-facing changes
- Add examples for new features
- Include API documentation
- Use Markdown for all documentation
- Keep documentation up-to-date